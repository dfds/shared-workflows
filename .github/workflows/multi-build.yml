name: Multi architecture docker build

on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
    inputs:
      image-repo:
        required: true
        type: string
      test-script-path:
        required: false
        type: string
      test-script-cmd:
        required: false
        type: string
      docker-readme-path:
        required: false
        type: string

jobs:
  test-container:
    if: "${{ inputs.test-script-path != '' }}"
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "linux/amd64,linux/arm/v7,linux/arm64"
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ inputs.image-repo }}:test
      - name: Test successful container
        run: |
          docker run \
            --rm \
            --volume "$PWD"/${{ inputs.test-script-path }}/:/${{ inputs.test-script-path }} \
            ${{ inputs.image-repo }}:test \
            ${{ inputs.test-script-cmd }}
  create-release:
    needs: test-container
    if: |
      always() &&
      (needs.test-container.result == 'success' || needs.test-container.result == 'skipped')
    # uses: dfds/shared-workflows/.github/workflows/automation-auto-release.yml@master
    uses: dfds/shared-workflows/.github/workflows/automation-auto-release.yml@multi-build
  collect-metadata:
    needs: create-release
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Docker meta
        id: docker-metadata
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ inputs.image-repo }}
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=semver,pattern={{version}},value=${{ needs.create-release.outputs.semver }}
      - name: Checkout
        uses: actions/checkout@master
      - name: Fetch description from README file
        if: "${{ inputs.docker-readme-path != '' }}"
        id: docker-description
        # This takes the first few lines of the docker-README file,
        # strips lines with common used symbols in README's
        # and fetches the first paragraph up to a dot.
        run: |
          readmeFile=$(head -n 10 ${{ inputs.docker-readme-path }})
          readmeFile=$(sed -r '/^[\[#|`|*|\|]/d' <<< "$readmeFile")
          readmeFile=$(echo $readmeFile | cut -f1 -d".")
          echo "${readmeFile}."


      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}