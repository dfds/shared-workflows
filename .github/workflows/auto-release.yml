name: Create repository release

on:
  workflow_call:

jobs:
  auto-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      # Get the repository's code
      -
        name: Checkout
        uses: actions/checkout@v3.5.2
      
      # https://github.com/docker/setup-qemu-action
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "linux/amd64,linux/arm/v7,linux/arm64"
      
      # https://github.com/docker/setup-buildx-action
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # Build and test the image before pushing
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ env.IMAGE_TEST_TAG }}
      
      -
        name: Test successful container
        run: |
          docker run \
            --rm \
            --volume "$PWD"/${{ env.PATH_TO_TEST_SCRIPT }}/:/${{ env.PATH_TO_TEST_SCRIPT }} \
            ${{ env.IMAGE_TEST_TAG }} \
            bash ${{ env.PATH_TO_TEST_SCRIPT }}
      
      # Create release and bump the version
      -
        name: Auto release
        id: onepassword-tools-release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: ${{ env.BUMP_VERSION_SCHEME }}
          tag_prefix: ""
      
      # Create docker image version tag
      -
        name: Docker meta
        id: onepassword-tools-build
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE_REPOSITORY }}
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=semver,pattern={{version}},value=${{ steps.onepassword-tools-release.outputs.version }}
      
      # Build and push docker image
      # Test image is not rebuild, cache is used, other arch images are build
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.onepassword-tools-build.outputs.tags }}
          labels: ${{ steps.onepassword-tools-build.outputs.labels }}
      
      -
        name: Fetch description from README file
        id: docker-description
        # This takes the first few lines of the docker-README file,
        # strips lines with common used symbols in README's
        # and fetches the first paragraph up to a dot.
        run: |
          readmeFile=$(head -n 10 $PATH_TO_DOCKER_README)
          readmeFile=$(sed -r '/^[\[#|`|*|\|]/d' <<< "$readmeFile")
          readmeFile=$(echo $readmeFile | cut -f1 -d".")
          echo "${readmeFile}."
      
      -
        name: Docker Hub README and Description
        uses: dfds/dockerhub-description@main
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.IMAGE_REPOSITORY }}
          # Inject the fetched description from previous step
          short-description: ${{ steps.docker-description.outputs.stdout }}
          readme-filepath: ${{ env.PATH_TO_DOCKER_README }}