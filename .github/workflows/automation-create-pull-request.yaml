
name: Generate Merge Log and Open Pull Request

on:
  workflow_call:
    inputs:
      repository-owner:
        description: 'Repository owner'
        required: true
        type: string
      repository-name:
        description: 'Repository name'
        required: true
        type: string
      main-branch:
        description: 'Main branch name'
        required: true
        type: string
      develop-branch:
        description: 'Develop branch name'
        required: true
        type: string

jobs:
  generate-merge-log-and-open-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Generate Merge Log
        run: |
          git fetch --all
          git log --merges --grep='^Merge pull request' --format="- PR: %s%n  Author: %ae%n  Date: %ad" origin/${{ github.inputs.main-branch }}..origin/${{ github.inputs.develop-branch }} > pr-merge.log
          git log --no-merges --format="- Non-PR: %s%n  Author: %ae%n  Date: %ad" origin/${{ github.inputs.develop-branch }}..origin/${{ github.inputs.main-branch }} > non-pr-merge.log



      - name: Extract GitHub Handles from PR Log
        id: extract-pr-handles
        run: |
          awk -F':' '/PR:/ {print $2}' pr-merge.log | awk '{print $1}' > pr-handles.log

      - name: Retrieve Pull Request Titles
        id: fetch-pr-titles
        run: |
          while read -r handle; do
            pr_number="${handle#*#}"
            response=$(curl -s -H "Authorization: Bearer ${{ github.token }}" "https://api.github.com/repos/${{ github.inputs.repository-owner }}/${{ github.inputs.repository-name }}/pulls/$pr_number")
            if [[ $(echo "$response" | jq -r '.message') != "Not Found" ]]; then
              title=$(echo "$response" | jq -r '.title')
              echo "$title"
            fi
          done < pr-handles.log > pr-titles.log

      - name: Retrieve GitHub Names for PRs
        id: fetch-pr-names
        run: |
          while read -r handle; do
            response=$(curl -s -H "Authorization: Bearer ${{ github.token }}" "https://api.github.com/search/users?q=$handle+in:email")
            name=$(echo "$response" | jq -r '.items[0].login')
            if [[ $(echo "$response" | jq -r '.total_count') == 1 ]]; then
              echo "$name"
            fi
          done < pr-handles.log > pr-names.log

      - name: Generate Final PR Merge Log
        id: generate-final-pr-log
        run: |
          paste pr-merge.log pr-names.log pr-titles.log | awk '{print $1,$2,$3,$4,$5,"\n  Author: @"$6,"\n  Date:",$7,$8,"\n  Title:",$9}' > final-pr-merge.log

      - name: Extract GitHub Handles from Non-PR Log
        id: extract-non-pr-handles
        run: |
          awk -F':' '/Non-PR:/ {print $2}' non-pr-merge.log | awk '{print $1}' > non-pr-handles.log

      - name: Retrieve GitHub Names for Non-PRs
        id: fetch-non-pr-names
        run: |
          while read -r handle; do
            response=$(curl -s -H "Authorization: Bearer ${{ github.token }}" "https://api.github.com/search/users?q=$handle+in:email")
            name=$(echo "$response" | jq -r '.items[0].login')
            if [[ $(echo "$response" | jq -r '.total_count') == 1 ]]; then
              echo "$name"
            fi
          done < non-pr-handles.log > non-pr-names.log

      - name: Generate Final Non-PR Merge Log
        id: generate-final-non-pr-log
        run: |
          paste non-pr-merge.log non-pr-names.log | awk '{print $1,$2,$3,$4,$5,"\n  Author: @"$6,"\n  Date:",$7,$8}' > final-non-pr-merge.log

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ github.token }}
          commit-message: Generate Merge Log
          branch: generate-merge-log
          title: Merge Log
          body: |
            ### Pull Requests
            ```markdown
            $(cat final-pr-merge.log)
            ```

            ### Non-PR Commits
            ```markdown
            $(cat final-non-pr-merge.log)
            ```

          base: ${{ github.inputs.main-branch }}
          repo: ${{ github.inputs.repository-owner }}/${{ github.inputs.repository-name }}
