name: Multi architecture docker build

on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      SLACK_WEBHOOK:
        required: false
    inputs:
      image-repo:
        required: true
        type: string
      os-archs:
        required: true
        type: string
      test-script-path:
        required: false
        type: string
      test-script-cmd:
        required: false
        type: string
      docker-readme-path:
        required: false
        type: string
      slack-notification:
        required: false
        type: boolean

jobs:
  test-container:
    # Skip this entire test phase if no path is provided
    if: "${{ inputs.test-script-path != '' }}"
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ inputs.image-repo }}:test
      - name: Test successful container
        run: |
          docker run \
            --rm \
            --volume "$PWD"/${{ inputs.test-script-path }}/:/${{ inputs.test-script-path }} \
            ${{ inputs.image-repo }}:test \
            ${{ inputs.test-script-cmd }}
  create-release:
    needs: test-container
    # This 'if' is required because if just 1 job is skipped all subsequent jobs are skipped
    if: |
      always() &&
      (needs.test-container.result == 'success' || needs.test-container.result == 'skipped')
    uses: dfds/shared-workflows/.github/workflows/automation-auto-release.yml@master
  collect-metadata:
    needs: create-release
    # This 'if' is required because if just 1 job is skipped all subsequent jobs are skipped
    if: |
      always() && needs.create-release.result == 'success'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      tags: ${{ steps.docker-metadata.outputs.tags }}
      labels: ${{ steps.docker-metadata.outputs.labels }}
      description: ${{ steps.docker-description.outputs.description }}
    steps:
      - name: Docker meta
        id: docker-metadata
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ inputs.image-repo }}
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=semver,pattern={{version}},value=${{ needs.create-release.outputs.semver }}
      - name: Checkout
        uses: actions/checkout@master
      - name: Fetch description from README file
        if: "${{ inputs.docker-readme-path != '' }}"
        id: docker-description
        # This takes the first few lines of the docker-README file,
        # strips lines with common used symbols in README's
        # and fetches the first paragraph up to a dot.
        run: |
          readmeFile=$(head -n 10 ${{ inputs.docker-readme-path }})
          readmeFile=$(sed -r '/^[\[#|`|*|\|]/d' <<< "$readmeFile")
          readmeFile=$(echo $readmeFile | cut -f1 -d".")
          echo "description=${readmeFile}" >> $GITHUB_OUTPUT
  upload:
    needs: collect-metadata
    # This 'if' is required because if just 1 job is skipped all subsequent jobs are skipped
    if: |
      always() && needs.collect-metadata.result == 'success'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "${{ inputs.os-archs }}"
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ inputs.os-archs }}
          push: true
          tags: ${{ needs.collect-metadata.outputs.tags }}
          labels: ${{ needs.collect-metadata.outputs.labels }}
      - name: Docker Hub README and Description
        if: "${{ inputs.docker-readme-path != '' }}"
        uses: dfds/dockerhub-description@main
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ inputs.image-repo }}
          # Inject the fetched description from previous step
          short-description: ${{ needs.collect-metadata.outputs.description }}
          readme-filepath: ${{ inputs.docker-readme-path }}
  slack-notification:
    # This respects the entire chain of jobs
    needs: upload
    if: |
      failure()
      && inputs.slack-notification == true
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - name: Notify Slack
        uses: ravsamhq/notify-slack-action@master
        with:
          status: failure
          notify_when: 'failure'
          notification_title: "{repo} Multi-Build action failed"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}> job <{run_url}|{workflow}>"
