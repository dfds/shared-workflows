name: Housekeeping

on:
  workflow_call:
    inputs:
      delete_head_branch:
        description: 'Enable delete head branch after merge'
        required: false
        default: false
        type: boolean
      sqaush_merge:
        description: 'Enable merging pull requests via squashed commit'
        required: false
        default: false
        type: boolean
      branch_protection:
        description: 'Enable branch protection on default branch'
        required: false
        default: true
        type: boolean

jobs:
  delete-head-branch:
    if: inputs.delete_head_branch == true
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Enable delete head branch after merge
        run: gh repo edit ${GITHUB_REPOSITORY} --delete-branch-on-merge
  sqaush-merge:
    if: inputs.sqaush_merge == true
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Enable merging pull requests via squashed commit
        run: gh repo edit ${GITHUB_REPOSITORY} --enable-squash-merge
  branch-protection:
    if: inputs.branch_protection == true
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          fetch-depth: 0
      - name: Get current branch protection on default branch
        id: hasBranchProtection
        continue-on-error: true
        run: |
          gh api repos/{owner}/{repo}/branches/{branch}/protection
      # Only create branch protection if it doesn't exist, do not modify current settings
      - name: Enable branch protection on default branch
        if: ${{ steps.hasBranchProtection.outcome == 'failure' }}
        run: |
          echo '{
            "required_pull_request_reviews": {
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": false,
              "require_last_push_approval": false,
              "required_approving_review_count": 1
            },
            "enforce_admins": true,
            "required_status_checks": null,
            "restrictions": null
          }' > tmp.json

          gh api --method PUT repos/{owner}/{repo}/branches/{branch}/protection --input tmp.json
