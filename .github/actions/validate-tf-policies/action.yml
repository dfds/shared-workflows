name: 'Hello World'
description: 'Greet someone'
inputs:
  who-to-greet:  # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        repository: 'dfds/iac-terraform-policies'
        token: ${{ secrets.GH_REPO_READ_IAC_TERRAFORM_POLICIES }}
        fetch-depth: 0

    # - run: ls -la # TODO: do a lookup on tfplan.json
    #   shell: bash
    #   name: list files
    # - run: echo Hello ${{ inputs.who-to-greet }}.
    #   shell: bash
    # - id: random-number-generator
    #   run: echo "random-number=$(echo $RANDOM)" >> $GITHUB_OUTPUT
    #   shell: bash
    # - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
    #   shell: bash

    # - name: Check file
    #   shell: bash
    #   run: |
    #     jsonfile=tfplan.json
    #     if [ ! -f $jsonfile ]; then
    #       echo "file does not exist"
    #       exit 1
    #     fi
    #     echo "tfplan.json exits."
    # - name: Install checkov
    #   run: |
    #     pip3 install checkov
    #     # check checkov is installed
    #     if [[ $(pip3 list | grep -i "checkov") =~ "checkov" ]]; then
    #       echo "checkov is installed"
    #     else
    #       echo "checkov is not installed"
    #       echo "Install checkov."
    #       exit 1
    #     fi
    #   shell: bash


    # - name: attempt clone repo"
    #   shell: bash
    #   run: |
    #     git clone https://github.com/dfds/iac-terraform-policies.git
    #     ls -a iac-terraform-policies
    # - name: Run test checkov
    #   shell: bash
    #   run: |
    #     checkov \
    #       -f tfplan.json --external-checks-git https://github.com/dfds/IAC-TERRAFORM-POLICIES.git//checkov --skip-check '*_AWS_*'
